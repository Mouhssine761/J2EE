{"ast":null,"code":"import { __decorate } from \"tslib\";\n// src/app/argument/argument.component.ts\nimport { Component } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nlet ArgumentComponent = class ArgumentComponent {\n  http;\n  speaker = '';\n  text = '';\n  feedback = [];\n  summary = null;\n  constructor(http) {\n    this.http = http;\n  }\n  sendArgument() {\n    if (!this.speaker.trim() || !this.text.trim()) {\n      return alert('Both speaker and text are required');\n    }\n    const payload = {\n      speaker: this.speaker.trim(),\n      text: this.text.trim()\n    };\n    this.http.post('/api/argument', payload).pipe(catchError(this.handleError)).subscribe(decision => {\n      this.feedback.push(decision);\n      // clear inputs if you like:\n      // this.speaker = '';\n      // this.text = '';\n    });\n  }\n  loadSummary() {\n    this.http.get('/api/summary').pipe(catchError(this.handleError)).subscribe(summary => {\n      this.summary = summary;\n    });\n  }\n  handleError(err) {\n    console.error('API error', err);\n    alert('Failed to communicate with server. Please try again.');\n    return throwError(() => err);\n  }\n};\nArgumentComponent = __decorate([Component({\n  selector: 'app-argument',\n  templateUrl: './argument.component.html',\n  styleUrls: ['./argument.component.css']\n})], ArgumentComponent);\nexport { ArgumentComponent };","map":{"version":3,"names":["Component","catchError","throwError","ArgumentComponent","http","speaker","text","feedback","summary","constructor","sendArgument","trim","alert","payload","post","pipe","handleError","subscribe","decision","push","loadSummary","get","err","console","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\T14s\\Downloads\\Compressed\\demo2\\demo2\\src\\app\\pages\\decisionmaking\\decisionmaking.component.ts"],"sourcesContent":["// src/app/argument/argument.component.ts\r\nimport { Component } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\ninterface Decision {\r\n  // adjust these fields to match what your backend returns\r\n  speaker: string;\r\n  text: string;\r\n  outcome: string;\r\n  confidence?: number;\r\n}\r\n\r\ninterface Summary {\r\n  summary: string;\r\n  // any other fields your API returns\r\n}\r\n\r\n@Component({\r\n  selector: 'app-argument',\r\n  templateUrl: './argument.component.html',\r\n  styleUrls: ['./argument.component.css']\r\n})\r\nexport class ArgumentComponent {\r\n  speaker = '';\r\n  text = '';\r\n  feedback: Decision[] = [];\r\n  summary: Summary | null = null;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  sendArgument() {\r\n    if (!this.speaker.trim() || !this.text.trim()) {\r\n      return alert('Both speaker and text are required');\r\n    }\r\n\r\n    const payload = { speaker: this.speaker.trim(), text: this.text.trim() };\r\n\r\n    this.http.post<Decision>('/api/argument', payload)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      )\r\n      .subscribe(decision => {\r\n        this.feedback.push(decision);\r\n        // clear inputs if you like:\r\n        // this.speaker = '';\r\n        // this.text = '';\r\n      });\r\n  }\r\n\r\n  loadSummary() {\r\n    this.http.get<Summary>('/api/summary')\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      )\r\n      .subscribe(summary => {\r\n        this.summary = summary;\r\n      });\r\n  }\r\n\r\n  private handleError(err: HttpErrorResponse) {\r\n    console.error('API error', err);\r\n    alert('Failed to communicate with server. Please try again.');\r\n    return throwError(() => err);\r\n  }\r\n}\r\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,UAAU,QAAQ,MAAM;AAoB1B,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAMRC,IAAA;EALpBC,OAAO,GAAG,EAAE;EACZC,IAAI,GAAG,EAAE;EACTC,QAAQ,GAAe,EAAE;EACzBC,OAAO,GAAmB,IAAI;EAE9BC,YAAoBL,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCM,YAAYA,CAAA;IACV,IAAI,CAAC,IAAI,CAACL,OAAO,CAACM,IAAI,EAAE,IAAI,CAAC,IAAI,CAACL,IAAI,CAACK,IAAI,EAAE,EAAE;MAC7C,OAAOC,KAAK,CAAC,oCAAoC,CAAC;IACpD;IAEA,MAAMC,OAAO,GAAG;MAAER,OAAO,EAAE,IAAI,CAACA,OAAO,CAACM,IAAI,EAAE;MAAEL,IAAI,EAAE,IAAI,CAACA,IAAI,CAACK,IAAI;IAAE,CAAE;IAExE,IAAI,CAACP,IAAI,CAACU,IAAI,CAAW,eAAe,EAAED,OAAO,CAAC,CAC/CE,IAAI,CACHd,UAAU,CAAC,IAAI,CAACe,WAAW,CAAC,CAC7B,CACAC,SAAS,CAACC,QAAQ,IAAG;MACpB,IAAI,CAACX,QAAQ,CAACY,IAAI,CAACD,QAAQ,CAAC;MAC5B;MACA;MACA;IACF,CAAC,CAAC;EACN;EAEAE,WAAWA,CAAA;IACT,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAU,cAAc,CAAC,CACnCN,IAAI,CACHd,UAAU,CAAC,IAAI,CAACe,WAAW,CAAC,CAC7B,CACAC,SAAS,CAACT,OAAO,IAAG;MACnB,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB,CAAC,CAAC;EACN;EAEQQ,WAAWA,CAACM,GAAsB;IACxCC,OAAO,CAACC,KAAK,CAAC,WAAW,EAAEF,GAAG,CAAC;IAC/BV,KAAK,CAAC,sDAAsD,CAAC;IAC7D,OAAOV,UAAU,CAAC,MAAMoB,GAAG,CAAC;EAC9B;CACD;AA1CYnB,iBAAiB,GAAAsB,UAAA,EAL7BzB,SAAS,CAAC;EACT0B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWzB,iBAAiB,CA0C7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}