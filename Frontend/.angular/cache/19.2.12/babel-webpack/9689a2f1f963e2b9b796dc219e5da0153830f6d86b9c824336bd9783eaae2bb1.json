{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./Services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    auth;\n    router;\n    constructor(auth, router) {\n      this.auth = auth;\n      this.router = router;\n    }\n    canActivate(route, state) {\n      if (this.auth.isLoggedIn()) {\n        return true;\n      }\n      this.router.navigate(['/login'], {\n        queryParams: {\n          returnUrl: state.url\n        }\n      });\n      return false;\n    }\n    static ɵfac = function AuthGuard_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthGuard;\n})();","map":{"version":3,"names":["AuthGuard","auth","router","constructor","canActivate","route","state","isLoggedIn","navigate","queryParams","returnUrl","url","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\T14s\\Downloads\\Compressed\\demo2\\KHCHICHINE-GROD-ELAMRI-RAHILI\\Frontend\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n} from '@angular/router';\r\nimport { AuthService } from './Services/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    if (this.auth.isLoggedIn()) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['/login'], {\r\n      queryParams: { returnUrl: state.url }\r\n    });\r\n    return false;\r\n  }\r\n}\r\n"],"mappings":";;;AAUA,WAAaA,SAAS;EAAhB,MAAOA,SAAS;IAEVC,IAAA;IACAC,MAAA;IAFVC,YACUF,IAAiB,EACjBC,MAAc;MADd,KAAAD,IAAI,GAAJA,IAAI;MACJ,KAAAC,MAAM,GAANA,MAAM;IACb;IAEHE,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;MAE1B,IAAI,IAAI,CAACL,IAAI,CAACM,UAAU,EAAE,EAAE;QAC1B,OAAO,IAAI;MACb;MACA,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;QAC/BC,WAAW,EAAE;UAAEC,SAAS,EAAEJ,KAAK,CAACK;QAAG;OACpC,CAAC;MACF,OAAO,KAAK;IACd;;uCAjBWX,SAAS,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;;aAATjB,SAAS;MAAAkB,OAAA,EAATlB,SAAS,CAAAmB,IAAA;MAAAC,UAAA,EADI;IAAM;;SACnBpB,SAAS;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}