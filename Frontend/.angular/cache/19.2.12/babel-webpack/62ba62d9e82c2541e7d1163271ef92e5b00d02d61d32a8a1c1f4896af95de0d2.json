{"ast":null,"code":"import { __decorate } from \"tslib\";\n// src/app/login/login.component.ts\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  authService;\n  router;\n  email = '';\n  password = '';\n  remember = false;\n  errorMessage = '';\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  onSubmit() {\n    this.errorMessage = '';\n    this.authService.login(this.email, this.password).subscribe({\n      next: () => {\n        this.router.navigate(['/']);\n      },\n      error: err => {\n        this.errorMessage = err.error || 'Login failed';\n        window.alert('Login failed: ' + (err.message || err));\n      }\n    });\n  }\n  togglePasswordVisibility(fieldId) {\n    const input = document.getElementById(fieldId);\n    input.type = input.type === 'password' ? 'text' : 'password';\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  imports: [FormsModule, MatSnackBarModule],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","FormsModule","LoginComponent","authService","router","email","password","remember","errorMessage","constructor","onSubmit","login","subscribe","next","navigate","error","err","window","alert","message","togglePasswordVisibility","fieldId","input","document","getElementById","type","__decorate","selector","imports","MatSnackBarModule","templateUrl","styleUrls"],"sources":["C:\\Users\\T14s\\Downloads\\Compressed\\demo2\\KHCHICHINE-GROD-ELAMRI-RAHILI\\Frontend\\src\\app\\pages\\login\\login.component.ts"],"sourcesContent":["// src/app/login/login.component.ts\r\nimport { Component } from '@angular/core';\r\nimport { AuthService } from '../../Services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  imports:[FormsModule, MatSnackBarModule],\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n\r\n})\r\nexport class LoginComponent {\r\n  email = '';\r\n  password = '';\r\n  remember = false;\r\n  errorMessage = '';\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  onSubmit() {\r\n    this.errorMessage = '';\r\n    this.authService.login(this.email, this.password).subscribe({\r\n      next: () => {\r\n        this.router.navigate(['/']);\r\n      },\r\n      error: err => {\r\n        this.errorMessage = err.error || 'Login failed';\r\n        window.alert('Login failed: ' + (err.message || err));\r\n      }\r\n    });\r\n  }\r\n\r\n  togglePasswordVisibility(fieldId: string) {\r\n    const input = document.getElementById(fieldId) as HTMLInputElement;\r\n    input.type = input.type === 'password' ? 'text' : 'password';\r\n  }\r\n}\r\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,eAAe;AAGzC,SAAQC,WAAW,QAAO,gBAAgB;AASnC,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAOfC,WAAA;EACAC,MAAA;EAPVC,KAAK,GAAG,EAAE;EACVC,QAAQ,GAAG,EAAE;EACbC,QAAQ,GAAG,KAAK;EAChBC,YAAY,GAAG,EAAE;EAEjBC,YACUN,WAAwB,EACxBC,MAAc;IADd,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;EACb;EAEHM,QAAQA,CAAA;IACN,IAAI,CAACF,YAAY,GAAG,EAAE;IACtB,IAAI,CAACL,WAAW,CAACQ,KAAK,CAAC,IAAI,CAACN,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACM,SAAS,CAAC;MAC1DC,IAAI,EAAEA,CAAA,KAAK;QACT,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC7B,CAAC;MACDC,KAAK,EAAEC,GAAG,IAAG;QACX,IAAI,CAACR,YAAY,GAAGQ,GAAG,CAACD,KAAK,IAAI,cAAc;QAC/CE,MAAM,CAACC,KAAK,CAAC,gBAAgB,IAAIF,GAAG,CAACG,OAAO,IAAIH,GAAG,CAAC,CAAC;MACvD;KACD,CAAC;EACJ;EAEAI,wBAAwBA,CAACC,OAAe;IACtC,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAACH,OAAO,CAAqB;IAClEC,KAAK,CAACG,IAAI,GAAGH,KAAK,CAACG,IAAI,KAAK,UAAU,GAAG,MAAM,GAAG,UAAU;EAC9D;CACD;AA5BYvB,cAAc,GAAAwB,UAAA,EAP1B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,WAAW;EACrBC,OAAO,EAAC,CAAC3B,WAAW,EAAE4B,iBAAiB,CAAC;EACxCC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CAEpC,CAAC,C,EACW7B,cAAc,CA4B1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}