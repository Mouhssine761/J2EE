{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ArgumentService = /*#__PURE__*/(() => {\n  class ArgumentService {\n    http;\n    base = '/api';\n    constructor(http) {\n      this.http = http;\n    }\n    evalOne(req) {\n      return this.http.post(`${this.base}/argument`, req);\n    }\n    evalBatch(reqs) {\n      return this.http.post(`${this.base}/arguments`, reqs);\n    }\n    summaryBatch(reqs) {\n      return this.http.post(`${this.base}/arguments/summary`, reqs);\n    }\n    static ɵfac = function ArgumentService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ArgumentService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ArgumentService,\n      factory: ArgumentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ArgumentService;\n})();","map":{"version":3,"names":["ArgumentService","http","base","constructor","evalOne","req","post","evalBatch","reqs","summaryBatch","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\T14s\\Downloads\\Compressed\\demo2\\demo2\\src\\app\\Services\\argument.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface ArgumentRequest {\r\n  speaker: string;\r\n  text:     string;\r\n}\r\n\r\nexport interface Decision {\r\n  speaker:     string;\r\n  text:        string;\r\n  willWork:       string;\r\n  reason?:  string;\r\n}\r\n\r\nexport interface SummaryResponse {\r\n  totalArguments: number;\r\n  summary : string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ArgumentService {\r\n  private base = '/api';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  evalOne(req: ArgumentRequest): Observable<Decision> {\r\n    return this.http.post<Decision>(`${this.base}/argument`, req);\r\n  }\r\n\r\n  evalBatch(reqs: ArgumentRequest[]): Observable<Decision[]> {\r\n    return this.http.post<Decision[]>(`${this.base}/arguments`, reqs);\r\n  }\r\n\r\n  summaryBatch(reqs: ArgumentRequest[]): Observable<SummaryResponse> {\r\n    return this.http.post<SummaryResponse>(`${this.base}/arguments/summary`, reqs);\r\n  }\r\n}\r\n"],"mappings":";;AAsBA,WAAaA,eAAe;EAAtB,MAAOA,eAAe;IAGNC,IAAA;IAFZC,IAAI,GAAG,MAAM;IAErBC,YAAoBF,IAAgB;MAAhB,KAAAA,IAAI,GAAJA,IAAI;IAAe;IAEvCG,OAAOA,CAACC,GAAoB;MAC1B,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAW,GAAG,IAAI,CAACJ,IAAI,WAAW,EAAEG,GAAG,CAAC;IAC/D;IAEAE,SAASA,CAACC,IAAuB;MAC/B,OAAO,IAAI,CAACP,IAAI,CAACK,IAAI,CAAa,GAAG,IAAI,CAACJ,IAAI,YAAY,EAAEM,IAAI,CAAC;IACnE;IAEAC,YAAYA,CAACD,IAAuB;MAClC,OAAO,IAAI,CAACP,IAAI,CAACK,IAAI,CAAkB,GAAG,IAAI,CAACJ,IAAI,oBAAoB,EAAEM,IAAI,CAAC;IAChF;;uCAfWR,eAAe,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;;aAAfb,eAAe;MAAAc,OAAA,EAAfd,eAAe,CAAAe,IAAA;MAAAC,UAAA,EADF;IAAM;;SACnBhB,eAAe;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}