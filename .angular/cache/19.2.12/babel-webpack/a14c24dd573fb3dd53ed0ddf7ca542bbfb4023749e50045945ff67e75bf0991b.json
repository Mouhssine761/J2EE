{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n// Smooth scrolling for navbar links\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Get all navbar links that should scroll to sections\n  const navLinks = document.querySelectorAll('.nav-links a[href^=\"#\"]');\n  // Add click event listener to each link\n  navLinks.forEach(link => {\n    link.addEventListener('click', function (e) {\n      // Prevent default anchor behavior\n      e.preventDefault();\n      // Get the target section id from the href attribute\n      const targetId = this.getAttribute('href');\n      if (!targetId) return;\n      // Get the target element\n      const targetSection = document.querySelector(targetId);\n      // If target exists, scroll to it\n      if (targetSection) {\n        // Get the header height to offset the scroll position\n        const header = document.querySelector('header');\n        const headerHeight = header ? header.offsetHeight : 0;\n        // Calculate the target position with offset\n        const targetPosition = targetSection.getBoundingClientRect().top + window.pageYOffset - headerHeight;\n        // Scroll smoothly to the target\n        window.scrollTo({\n          top: targetPosition,\n          behavior: 'smooth'\n        });\n        // Update active class on navbar links\n        const allNavLinks = document.querySelectorAll('.nav-links a[href^=\"#\"]');\n        allNavLinks.forEach(navLink => navLink.classList.remove('active'));\n        this.classList.add('active');\n        // Close mobile menu if open\n        const mobileMenu = document.querySelector('.nav-links');\n        if (mobileMenu && mobileMenu.classList.contains('active')) {\n          mobileMenu.classList.remove('active');\n        }\n      }\n    });\n  });\n  // Highlight the active section on scroll\n  window.addEventListener('scroll', function () {\n    let current = '';\n    const sections = document.querySelectorAll('section[id]');\n    const header = document.querySelector('header');\n    const headerHeight = header ? header.offsetHeight : 0;\n    sections.forEach(section => {\n      const sectionTop = section.offsetTop - headerHeight - 100; // Add some offset\n      const sectionHeight = section.offsetHeight;\n      if (window.pageYOffset >= sectionTop && window.pageYOffset < sectionTop + sectionHeight) {\n        current = '#' + section.getAttribute('id');\n      }\n    });\n    const navLinks = document.querySelectorAll('.nav-links a[href^=\"#\"]');\n    navLinks.forEach(link => {\n      link.classList.remove('active');\n      if (link.getAttribute('href') === current) {\n        link.classList.add('active');\n      }\n    });\n  });\n});\nlet HomeComponent = class HomeComponent {\n  auth;\n  router;\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n  logout() {\n    this.auth.logout();\n    this.router.navigate(['/login']);\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  imports: [CommonModule, RouterModule],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.css'\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"names":["Component","CommonModule","RouterModule","document","addEventListener","navLinks","querySelectorAll","forEach","link","e","preventDefault","targetId","getAttribute","targetSection","querySelector","header","headerHeight","offsetHeight","targetPosition","getBoundingClientRect","top","window","pageYOffset","scrollTo","behavior","allNavLinks","navLink","classList","remove","add","mobileMenu","contains","current","sections","section","sectionTop","offsetTop","sectionHeight","HomeComponent","auth","router","constructor","logout","navigate","__decorate","selector","imports","templateUrl","styleUrl"],"sources":["C:\\Users\\T14s\\Downloads\\Compressed\\demo2\\demo2\\src\\app\\pages\\home\\home.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {Router, RouterModule} from '@angular/router';\r\nimport {AuthService} from '../../Services/auth.service';\r\n// Smooth scrolling for navbar links\r\ndocument.addEventListener('DOMContentLoaded', function(): void {\r\n  // Get all navbar links that should scroll to sections\r\n  const navLinks: NodeListOf<HTMLAnchorElement> = document.querySelectorAll('.nav-links a[href^=\"#\"]');\r\n\r\n  // Add click event listener to each link\r\n  navLinks.forEach((link: HTMLAnchorElement): void => {\r\n    link.addEventListener('click', function(e: MouseEvent): void {\r\n      // Prevent default anchor behavior\r\n      e.preventDefault();\r\n\r\n      // Get the target section id from the href attribute\r\n      const targetId: string | null = this.getAttribute('href');\r\n\r\n      if (!targetId) return;\r\n\r\n      // Get the target element\r\n      const targetSection: HTMLElement | null = document.querySelector(targetId);\r\n\r\n      // If target exists, scroll to it\r\n      if (targetSection) {\r\n        // Get the header height to offset the scroll position\r\n        const header: HTMLElement | null = document.querySelector('header');\r\n        const headerHeight: number = header ? header.offsetHeight : 0;\r\n\r\n        // Calculate the target position with offset\r\n        const targetPosition: number = targetSection.getBoundingClientRect().top + window.pageYOffset - headerHeight;\r\n\r\n        // Scroll smoothly to the target\r\n        window.scrollTo({\r\n          top: targetPosition,\r\n          behavior: 'smooth'\r\n        });\r\n\r\n        // Update active class on navbar links\r\n        const allNavLinks: NodeListOf<HTMLAnchorElement> = document.querySelectorAll('.nav-links a[href^=\"#\"]');\r\n        allNavLinks.forEach((navLink: HTMLAnchorElement): void => navLink.classList.remove('active'));\r\n        this.classList.add('active');\r\n\r\n        // Close mobile menu if open\r\n        const mobileMenu: HTMLElement | null = document.querySelector('.nav-links');\r\n        if (mobileMenu && mobileMenu.classList.contains('active')) {\r\n          mobileMenu.classList.remove('active');\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  // Highlight the active section on scroll\r\n  window.addEventListener('scroll', function(): void {\r\n    let current: string = '';\r\n    const sections: NodeListOf<HTMLElement> = document.querySelectorAll('section[id]');\r\n    const header: HTMLElement | null = document.querySelector('header');\r\n    const headerHeight: number = header ? header.offsetHeight : 0;\r\n\r\n    sections.forEach((section: HTMLElement): void => {\r\n      const sectionTop: number = section.offsetTop - headerHeight - 100; // Add some offset\r\n      const sectionHeight: number = section.offsetHeight;\r\n\r\n      if (window.pageYOffset >= sectionTop && window.pageYOffset < sectionTop + sectionHeight) {\r\n        current = '#' + section.getAttribute('id');\r\n      }\r\n    });\r\n\r\n    const navLinks: NodeListOf<HTMLAnchorElement> = document.querySelectorAll('.nav-links a[href^=\"#\"]');\r\n    navLinks.forEach((link: HTMLAnchorElement): void => {\r\n      link.classList.remove('active');\r\n      if (link.getAttribute('href') === current) {\r\n        link.classList.add('active');\r\n      }\r\n    });\r\n  });\r\n});\r\n@Component({\r\n  selector: 'app-home',\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './home.component.html',\r\n  styleUrl: './home.component.css'\r\n})\r\n\r\nexport class HomeComponent {\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  logout() {\r\n    this.auth.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}